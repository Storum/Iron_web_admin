/*
 * File: app/controller/order_task_controller.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Iron.controller.order_task_controller', {
    extend: 'Ext.app.Controller',

    config: {
        stores: [
            'executor_store'
        ],

        refs: {
            orderTaskPanel: 'panel#orderTaskPanel',
            cancel_btn: 'panel#orderTaskPanel button[itemId=cancel_btn]',
            order_list: 'panel#orderTaskPanel list[itemId=order_list]',
            calc_from_time: 'panel#orderTaskPanel button[itemId=calc_from_time]',
            create_for_selected: 'panel#orderTaskPanel button[itemId=create_for_selected]',
            executor_fld: 'panel#orderTaskPanel selectfield[itemId=executor_fld]'
        },

        control: {
            "orderTaskPanel": {
                show: 'Panel_show'
            },
            "cancel_btn": {
                tap: 'cancel_tap'
            },
            "create_for_selected": {
                tap: 'create_task_for_selected'
            }
        }
    },

    Panel_show: function(component, eOpts) {
        this.update_executor_list();
        this.update_order_list();
    },

    cancel_tap: function(button, e, eOpts) {
        this.getOrderTaskPanel().destroy();
    },

    create_task_for_selected: function(button, e, eOpts) {
        var selected_items = this.getOrder_list().getSelection();
        var item_count = selected_items.length;

        var selected_orders = [];

        for (var i = 0; i < item_count; i++)
            selected_orders[selected_orders.length] = selected_items[i].get('id_order');


        var json_selected_orders = JSON.stringify(selected_orders);

        var t = this;

        Ext.data.JsonP.request(
            {
                url: GlobalVars.url_setting + 'php/base_functional.php',
                params:
                {
                    function_name	: 'get_data_for_task_order_by_order_list',
                    order_list		: json_selected_orders,
                    format: 'json'
                },
                callbackKey: 'callback',
                async: false,
                success: function (result)
                {
                    t.create_task_order_html (result.order_detail_list);
                }
            });
    },

    update_executor_list: function() {
        var t = this;

        Ext.data.JsonP.request(
            {
                url: GlobalVars.url_setting + 'php/base_functional.php',
                params:
                {
                    function_name: 'get_executor_list',
                    format: 'json'
                },
                callbackKey: 'callback',
                async: false,
                success: function (result)
                {
                    t.update_executor_store (result.executor_list);
                }
            });
    },

    update_executor_store: function(data) {
        var executor_store = this.getExecutor_fld().getStore();

        executor_store.data.clear();
        executor_store.setData(data);
    },

    update_order_list: function() {
        var t = this;

        Ext.data.JsonP.request(
            {
                url: GlobalVars.url_setting + 'php/base_functional.php',
                params:
                {
                    function_name	: 'get_order_list_by_status_name',
                    status_name		: 'Заказ создан',
                    format: 'json'
                },
                callbackKey: 'callback',
                async: false,
                success: function (result)
                {
                    t.update_order_store (result.order_list);
                }
            });
    },

    update_order_store: function(data) {
        var order_store = this.getOrder_list().getStore();

        order_store.data.clear();
        order_store.setData(data);
    },

    create_task_order_html: function(data) {
        var newWin = window.open('url','Заказ-наряд','height=800,width=800', 'scrollbars=yes');

        var cur_order_id = data[0].id_order;
        var count_detail_of_order = 0;
        var result_html_text = '<div><table border="1" frame="above"> <caption><font size="2">Заказ #' + data[0].id_order + '</font></caption> <tr> <th>Наименование</th> <th>Колчество</th> <th>На вешалке</th> <th>Комментарии</th> </tr>';
        var table = '';


        for (var item in data)
        {
            if (data[item].id_order != cur_order_id)
            {
                result_html_text += '<div><table border="1" frame="above"> <caption><font size="2">Заказ #' + data[item].id_order + '<br>Комментарии: ' + data[item].order_comment + ' </font></caption> <tr> <th>Наименование</th> <th>Колчество</th> <th>На вешалке</th> <th>Комментарии</th> </tr></table> </div>';
            }

            cur_order_id = data[item].id_order;
        }


        newWin.document.write(result_html_text);


        /*var result_table = '<div><table border="1" frame="above"> <caption><font size="2">Сумма к оплате </font></caption> <tr> <th>Наименование</th> <th>Сумма</th> </tr>';

        if (no_weight_item_sum !== 0)
        {
            result_table += '<tr><td> Штучные позиции </font>' + hanger_no_weight_count_text  + '</td>';
            result_table += '<td>' + no_weight_item_sum.toString() + ' руб. </td></tr>';

        }

        if (weight_home_item_sum !== 0)
        {
            result_table += '<tr><td>Весовые позиции (домашний текстиль) </font>' + hanger_home_weight_count_text + '</td>';
            result_table += '<td>' + weight_home_item_sum.toString() + ' руб. </td></tr>';
        }

        if (weight_dress_item_sum !== 0)
        {
            result_table += '<tr><td>Весовые позиции (одежда) </font>' + hanger_dress_weight_count_text + '</td>';
            result_table += '<td>' + weight_dress_item_sum.toString() + ' руб. </td></tr>';
        }

        result_table += '<tr><th align="left">Итого:</th> <th align="left">' + Math.floor((no_weight_item_sum + weight_home_item_sum + weight_dress_item_sum)/5)*5 + ' руб. </th> <tr>';

        result_table += '</table> </div>';*/




        /*var client = t.getApplication().getController('order_panel_controller').get_selected_order_client();
        var date = order_record.get('date_create');

        var x = '<style type="text/css">TABLE {border-collapse: collapse; border: 1px solid black}TD, TH {padding: 3px; border: 1px solid black;font-size: 10px}</style>';

        var header_text = '<div><p align="center">Договор № ' + order_record.get('id_order') + ' от ' +  ('0' + date.getDate()).slice(-2) + '.' + ('0' + (date.getMonth() + 1)).slice(-2) + '.' + date.getFullYear() + '</p>';
        var contract_text = '<p align="left"> <font size="2"> <b> Особые условия выполнения договора по глажке Исполнителем. </b> </font> </p>';
        var time = '<font size="2"> 1. Срок ответственного хранения выполненного заказа Исполнителем не более 3-х дней. За хранение вещей более 3 дней взимается плата в размере 1% от стоимости заказа, за каждый день хранения.</font>';
        var task = '<br><font size="2"> 2.	Глажение осуществляется по заданию Заказчика. </font>';
        var lable = '<br><font size="2"> 3. Изделия с отсутствующей маркировкой, либо имеющие неполную/запрещающую маркировку (символику к обслуживанию) принимаются только с согласия Заказчика. За возможные последствия Исполнитель ответственности не несет. Ответственность за вред, причиненный Заказчику вследствие недостоверной или неполной информации лежит на Изготовителе, либо Продавце изделия (ст. 1095, 1095 ГК РФ). </font>';
        var strong_wear = '<br><font size="2"> 4. В случае сильного износа и ветхости изделия Исполнитель не может отвечать за возможные механические повреждения в процессе обработки. </font>';
        var claims = '<br><font size="2"> 5. Претензии по качеству услуги могут быть предъявлены только в момент приема-передачи заказа (ст. 29 Закона «О защите прав потребителей»). Заказчик, принявший изделие без проверки лишается права на претензию и ссылки на недостатки в услуге, которые могли бы быть устранены при приемке вещи (п.3, ст. 720 ГК РФ). </font></div>';

        var agreement = '<div style="float:left"><br><font size="2"> О неустранимых дефектах, последствиях глаженья, в случае некачественного изготовления изделия фирмой-производителем и недостоверной информацией по уходу за изделием (либо отсутствием таковой) <b>ПРЕДУПРЕЖДЕН</b></font>. <br><font size="2">С правилами приема вещей в гладильню, а также с условиями договора по глаженью изделий, указанных в "Информации для клиентов"</font>';
        var signatures = '<br><b><font size="2"> ОЗНАКОМЛЕН И СОГЛАСЕН </b>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp________________________/__<ins>' + client.get('surname') + ' ' + client.get('name').substring(0,1) + '.' + client.get('patronymic').substring(0,1) + '</ins>__' ;
        signatures += '<br>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<sup>подпись</sup>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<sup>расшифровка</sup>';
        var signatures_finish = '<br><font size="2"> Качество работы (услуги), сохранность, исходную форму и целостность <b>ПРОВЕРИЛ</b></font>.<br><font size="2">Заказ получил, претензий к качеству услуги <b>НЕ ИМЕЮ</b></font> &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp________________________/__<ins>' + client.get('surname') + ' ' + client.get('name').substring(0,1) + '.' + client.get('patronymic').substring(0,1) + '</ins>__';
        signatures_finish += '<br>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<sup>подпись</sup>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<sup>расшифровка</sup></div>';

        var no_weight_table = t.create_no_weight_html_table(order_record, order_details, action_record, home_weight_price, dress_weight_price);
        var weight_home_table = t.create_home_weight_html_table (order_record, order_details, action_record, home_weight_price, dress_weight_price);
        var weight_dress_table = t.create_dress_weight_html_table (order_record, order_details, action_record, home_weight_price, dress_weight_price);
        var result_table = t.create_result_html_table (no_weight_table.result_sum, weight_home_table.result_sum, weight_dress_table.result_sum, hanger_count, total_count);


        */



        //newWin.document.write(x + header_text + contract_text + time + task + lable + strong_wear + claims + '<br>' + no_weight_table.table + '<br>' + weight_home_table.table + '<br>'+  weight_dress_table.table + '<br>' + result_table + '<br>' + agreement + '<br>' + signatures + '<br>' + signatures_finish);


    }

});