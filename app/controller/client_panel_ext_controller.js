/*
 * File: app/controller/client_panel_ext_controller.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Iron.controller.client_panel_ext_controller', {
    extend: 'Ext.app.Controller',

    config: {
        stores: [
            'client_store'
        ],

        refs: {
            clientPanelExt: 'panel#clientPanelExt',
            client_list: 'panel#clientPanelExt list[itemId=client_list]',
            add_client_btn: 'panel#clientPanelExt button[itemId=add_client_btn]',
            delete_client_btn: 'panel#clientPanelExt button[itemId=delete_client_btn]',
            menu_client_btn: 'panel#clientPanelExt button[itemId=menu_client_btn]',
            cancle_btn: 'panel#clientPanelExt button[itemId=cancle_btn]',
            search_field: 'panel#clientPanelExt searchfield[itemId=search_field]'
        },

        control: {
            "panel#clientPanelExt": {
                show: 'onFormpanelShow'
            },
            "client_list": {
                itemtap: 'onListItemTap',
                itemdoubletap: 'onListItemDoubletap'
            },
            "search_field": {
                keyup: 'onSearchfieldKeyup'
            },
            "add_client_btn": {
                tap: 'add_client_tap'
            },
            "delete_client_btn": {
                tap: 'delete_client_tap'
            },
            "cancle_btn": {
                tap: 'cancle_tap'
            }
        }
    },

    onFormpanelShow: function(component, eOpts) {
        this.update_client_list();


        if (this.getClientPanelExt().target == 'select_client')
        {
            this.getMenu_client_btn().setHidden(true);
            this.getCancle_btn().setHidden(false);
        }
    },

    onListItemTap: function(dataview, index, target, record, e, eOpts) {
        this.getDelete_client_btn().setDisabled(false);
    },

    onListItemDoubletap: function(dataview, index, target, record, e, eOpts) {
        var client_panel = this.getClientPanelExt();
        if (client_panel.target == 'select_client')
        {
            var client_list = this.getClient_list();
            this.getApplication().getController(client_panel.source).set_client_name(client_list.getSelection()[0].get('name'), client_list.getSelection()[0].get('id_client'));
            client_panel.destroy();
            return;
        }


        addClientPanel = Ext.create('widget.addclientpanel');
        addClientPanel.source = 'client_panel_ext_controller';
        addClientPanel.target = 'edit_client';
        Ext.Viewport.add(addClientPanel);
        addClientPanel.show();
    },

    onSearchfieldKeyup: function(textfield, e, eOpts) {
        var value = textfield.getValue(),
        store = this.getClient_list().getStore();
        store.clearFilter();

        store.filter('surname', value);
    },

    add_client_tap: function(button, e, eOpts) {
        addClientPanel = Ext.create('widget.addclientpanel');
        addClientPanel.source = 'client_panel_ext_controller';
        addClientPanel.target = 'add_client';
        Ext.Viewport.add(addClientPanel);
        addClientPanel.show();
    },

    delete_client_tap: function(button, e, eOpts) {
        var client_list = this.getClient_list();
        var selected_id_client = client_list.getSelection ()[0].get('id_client');

        this.delete_client (selected_id_client, false);
    },

    cancle_tap: function(button, e, eOpts) {
        var client_panel = this.getClientPanelExt();
        client_panel.destroy();
    },

    update_client_list: function() {
        var t = this;

        Ext.data.JsonP.request(
            {
                url: GlobalVars.url_setting + 'php/base_functional.php',
                params:
                {
                    function_name: 'get_client_list',
                    format: 'json'
                },
                callbackKey: 'callback',
                async: false,
                success: function (result)
                {
                    t.update_client_store (result.client_list);
                }
            });
    },

    update_client_store: function(data) {

        var client_ListView = this.getClient_list();
        var client_store = client_ListView.getStore();

        client_store.data.clear();
        client_store.setData(data);


    },

    get_selected_client_record: function() {
        var client_list = this.getClient_list();


        return client_list.getStore().findRecord('id_client', client_list.getSelection()[0].get('id_client'));
    },

    delete_client: function(id_client) {
        var t = this;

        Ext.data.JsonP.request(
            {
                url: GlobalVars.url_setting + 'php/base_functional.php',
                params:
                {
                    function_name: 'delete_client',
                    id_client: id_client,
                    format: 'json'
                },
                callbackKey: 'callback',
                async: false,
                success: function (result)
                {
                    t.update_client_list();
                    t.getDelete_client_btn().setDisabled(true);

                    Ext.Msg.alert('Iron', result.text);
                }
            });
    }

});