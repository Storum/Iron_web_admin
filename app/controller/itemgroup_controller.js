/*
 * File: app/controller/itemgroup_controller.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Iron.controller.itemgroup_controller', {
    extend: 'Ext.app.Controller',

    config: {
        views: [
            'ItemGroupsPanel'
        ],

        refs: {
            itemGroupsPanel: 'panel#itemGroupsPanel',
            itemgroupList: 'panel#itemGroupsPanel list[itemId=itemgroup_list]',
            itemgroupNameField: 'panel#itemGroupsPanel textfield[itemId=itemgroup_name_textfield]',
            itemgroupCcommentField: 'panel#itemGroupsPanel textfield[itemId=itemgroup_comment_textfield]',
            itemgroup_delete_button: 'panel#itemGroupsPanel button[itemId=delete_itemgroup_button]',
            itemgroup_save_button: 'panel#itemGroupsPanel button[itemId=itemgroup_save_button]'
        },

        control: {
            "itemGroupsPanel": {
                activate: 'onItemGroupsPanelActivate'
            },
            "itemgroupList": {
                itemtap: 'onItemgroupListSelect'
            },
            "itemgroup_delete_button": {
                tap: 'itemgroup_delete_button'
            },
            "textfield[target='edit_itemgroup']": {
                keyup: 'itemgroup_data_changed'
            },
            "itemgroup_save_button": {
                tap: 'save_tap'
            }
        }
    },

    onItemGroupsPanelActivate: function(newActiveItem, container, oldActiveItem, eOpts) {
        this.update_itemgroup_list();

    },

    onItemgroupListSelect: function(dataview, index, target, record, e, eOpts) {


        var itemgroup_NameField		= this.getItemgroupNameField();
        var itemgroup_CommentField	= this.getItemgroupCcommentField();


        itemgroup_NameField.setValue (record.get('name'));
        itemgroup_CommentField.setValue (record.get('comment'));


        this.change_btn_disable (false);
        this.change_save_btn_status (true);
    },

    itemgroup_delete_button: function(button, e, eOpts) {
        var itemgroup_list = this.getItemgroupList();
        var selected_id_item_type_group = itemgroup_list.getSelection ()[0].get('id_item_type_group');

        this.delete_itemgroup (selected_id_item_type_group);
    },

    itemgroup_data_changed: function(textfield, e, eOpts) {

        this.check_field_change ();
    },

    save_tap: function(button, e, eOpts) {


        var name = this.getItemgroupNameField().getValue();
        var comment = this.getItemgroupCcommentField().getValue();


        var itemgroup_list = this.getItemgroupList();
        var selected_id_item_type_group = itemgroup_list.getSelection ()[0].get('id_item_type_group');

        var t = this;


        Ext.data.JsonP.request(
            {
                url: GlobalVars.url_setting + 'php/base_functional.php',
                params:
                {
                    function_name: 'update_itemgroup_data',
                    id_item_type_group: selected_id_item_type_group,
                    name: name,
                    comment: comment,
                    format: 'json'
                },
                callbackKey: 'callback',
                async: false,
                success: function (result)
                {

                    t.update_itemgroup_list();
                    t.change_save_btn_status(true);

                    t.select_itemgroup_in_listview (itemgroup_list, selected_id_item_type_group);
                }
            });

    },

    update_itemgroup_list: function() {
        var t = this;

        Ext.data.JsonP.request(
            {
                url: GlobalVars.url_setting + 'php/base_functional.php',
                params:
                {
                    function_name: 'get_itemgroup_list',
                    format: 'json'
                },
                callbackKey: 'callback',
                async: false,
                success: function (result)
                {
                    t.update_itemgroup_store (result.itemgroup_list);
                }
            });
    },

    update_itemgroup_store: function(data) {

        var itemgroup_ListView = this.getItemgroupList();
        var itemgroup_store = itemgroup_ListView.getStore();

        itemgroup_store.data.clear();
        itemgroup_store.setData(data);

    },

    change_btn_disable: function(disabled) {
        var itemgroup_del_btn = this.getItemgroup_delete_button ();
        itemgroup_del_btn.setDisabled (disabled);
    },

    change_save_btn_status: function(newValue) {
        var itemgroup_save_btn = this.getItemgroup_save_button();
        itemgroup_save_btn.setDisabled (newValue);
    },

    delete_itemgroup: function(id_item_type_group) {
        var t = this;

        Ext.data.JsonP.request(
            {
                url: GlobalVars.url_setting + 'php/base_functional.php',
                params:
                {
                    function_name: 'delete_itemgroup',
                    id_item_type_group: id_item_type_group,
                    format: 'json'
                },
                callbackKey: 'callback',
                async: false,
                success: function (result)
                {
                    var itemgroup_list = t.getItemgroupList();

                    t.update_itemgroup_list();
                    t.change_save_btn_status(true);

                    t.select_itemgroupt_in_listview (itemgroup_list, id_item_type_group);

                    Ext.Msg.alert('Iron', result.text);
                }
            });
    },

    check_field_change: function() {
        var t = this;

        var itemgroup_list = t.getItemgroupList();

        if (itemgroup_list.getSelection().length !== 0)
        {
            var name = this.getItemgroupNameField();
            var comment = this.getItemgroupCcommentField();


            if (itemgroup_list.getSelection()[0].get(name.getName()) !== name.getValue())
            {
                this.change_save_btn_status (false);
                return;
            }


            if (itemgroup_list.getSelection()[0].get(comment.getName()) !== comment.getValue())
            {
                this.change_save_btn_status (false);
                return;
            }

            this.change_save_btn_status (true);

        }
    },

    select_itemgroup_in_listview: function(listview, id_item_type_group) {
        var store = listview.getStore();
        var record_index = store.find ('id_item_type_group', id_item_type_group);
        listview.select (0, false, true);
    }

});