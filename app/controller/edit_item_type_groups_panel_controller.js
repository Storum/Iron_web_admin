/*
 * File: app/controller/edit_item_type_groups_panel_controller.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Iron.controller.edit_item_type_groups_panel_controller', {
    extend: 'Ext.app.Controller',

    config: {
        refs: {
            editItemTypeGroupsPanel: 'panel#editItemTypeGroupsPanel',
            item_type_group_name: 'panel#editItemTypeGroupsPanel textfield[itemId=item_type_group_name]',
            item_type_group_comment: 'panel#editItemTypeGroupsPanel textfield[itemId=item_type_group_comment]',
            ok_btn: 'panel#editItemTypeGroupsPanel button[itemId=ok_btn]',
            cancle_btn: 'panel#editItemTypeGroupsPanel button[itemId=cancle_btn]'
        },

        control: {
            "cancle_btn": {
                tap: 'cancle_tap'
            },
            "ok_btn": {
                tap: 'ok_tap'
            },
            "item_type_group_name": {
                keyup: 'name_keyup'
            },
            "editItemTypeGroupsPanel": {
                show: 'onPanelShow'
            }
        }
    },

    cancle_tap: function(button, e, eOpts) {
        var edit_item_type_groups_panel = this.getEditItemTypeGroupsPanel();
        edit_item_type_groups_panel.destroy();
    },

    ok_tap: function(button, e, eOpts) {
        var edit_item_type_groups_panel = this.getEditItemTypeGroupsPanel();
        var name = this.getItem_type_group_name().getValue();
        var comment = this.getItem_type_group_comment().getValue();


        if (edit_item_type_groups_panel.target == 'edit')
            this.edit_item_type_group (item_type_group = this.getApplication().getController(edit_item_type_groups_panel.source).get_selected_node().get('id_item_type_group'), name, comment);
        else if (edit_item_type_groups_panel.target == 'add')
            this.add_item_type_group (name, comment);
    },

    name_keyup: function(textfield, e, eOpts) {
        this.check_all_fields();
    },

    onPanelShow: function(component, eOpts) {

        var edit_item_type_groups_panel = this.getEditItemTypeGroupsPanel();

        if (edit_item_type_groups_panel.target == 'edit')
        {
            var item_type_group = this.getApplication().getController(edit_item_type_groups_panel.source).get_selected_node();
            var name = this.getItem_type_group_name();
            var comment = this.getItem_type_group_comment();

            this.getOk_btn().setDisabled (false);


            name.setValue(item_type_group.get('name'));
            comment.setValue(item_type_group.get('group_comment'));

        //    this.client = client;
        }
    },

    check_all_fields: function() {
        var name = this.getItem_type_group_name().getValue();


        if (name.length > 0)
            this.getOk_btn().setDisabled(false);
        else
            this.getOk_btn().setDisabled(true);

    },

    add_item_type_group: function(name, comment) {
        var t = this;


        Ext.data.JsonP.request(
            {
                url: GlobalVars.url_setting + 'php/base_functional.php',
                params:
                {
                    function_name	: 'add_item_type_group',
                    name			: name,
                    comment			: comment,
                    format: 'json'
                },
                callbackKey: 'callback',
                async: false,
                success: function (result)
                {
                    Ext.Msg.alert('Iron', result.text);

                    if (result.result == 'ok')
                        t.close_panel();
                }
            });
    },

    edit_item_type_group: function(id_item_type_group, name, comment) {
        var t = this;

        Ext.data.JsonP.request(
            {
                url: GlobalVars.url_setting + 'php/base_functional.php',
                params:
                {
                    function_name		:	'update_item_type_group',
                    id_item_type_group	:	id_item_type_group,
                    name				:	name,
                    comment				:	comment,
                    format: 'json'
                },
                callbackKey: 'callback',
                async: false,
                success: function (result)
                {
                    Ext.Msg.alert('Iron', result.text);

                    if (result.result == 'ok')
                        t.close_panel();
                }
            });
    },

    close_panel: function() {
        var edit_item_type_groups_panel = this.getEditItemTypeGroupsPanel();

        this.getApplication().getController(edit_item_type_groups_panel.source).update_item_type_list();
        edit_item_type_groups_panel.destroy();
    }

});